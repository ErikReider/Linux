#!/usr/bin/bash
function help {
    echo "Usage: $programname <arguments> <next operations> Or sudo $programname -i (for initial installation)"
    echo
    echo "Arguments: "
    echo "-m or --mangohud to enable mangohud"
    echo "-gm or --gamemode to enable Feral gamemode"
    echo "-p or --prime to use Nvidia prime-run"
    echo "-DM or --DriverMesa to use AMD Mesa drivers"
    echo "-DA or --driverVLK to use AMDVLK Drivers"
    echo "--e or --disableEsync to disable esync"
    echo "--f or --disableFsync to disable fsync"
    echo "--l or --log to enable PROTON_LOG"
    echo "-l or --log to enable PROTON_LOG"
    echo "--wd or --disableWineDebug to disable WINEDEBUG"
}

function error {
    programname=`basename "$0"`
    echo "ERROR: $1"
    echo
    help
    exit 1
}

if [ "$#" == 0 ]; then
    error 'No args supplied. -h or --help for help'
fi

if [[ "$1" == "-h" || "$1" == "--help" ]]; then
    help
    exit
fi

if [[ "$1" == "--uninstall" ]]; then
    sudo rm /usr/bin/`basename "$0"`
    echo "Uninstalled"
    exit
fi

if [[ "$1" == "-i" ]] ;then
    sudo cp ./`basename "$0"` /usr/bin/`basename "$0"`
    echo "Installed"
    if [ "$2" == "" ]; then exit; fi
    shift
fi

arguments=''
quit="false"
while [ $# -gt 0 -a "$quit" == "false" ]; do
    case "$1" in
        "-m" | "--mangohud") arguments="${arguments} MANGOHUD=1";;
        "-gm" | "--gamemode") arguments="${arguments} gamemoderun";;
        "-p" | "--prime") arguments="prime-run ${arguments}";;
        "-dM" | "--driverMesa") export VK_ICD_FILENAMES=/usr/share/vulkan/icd.d/radeon_icd.i686.json:/usr/share/vulkan/icd.d/radeon_icd.x86_64.json;;
        "-dA" | "--driverVLK") export VK_ICD_FILENAMES=/usr/share/vulkan/icd.d/amd_icd32.json:/usr/share/vulkan/icd.d/amd_icd64.json;;
        "--e" | "--disableEsync" | "-dEsync") arguments="${arguments} PROTON_NO_ESYNC=1";;
        "--f" | "--disableFsync" | "-dFsync") arguments="${arguments} PROTON_NO_FSYNC=1";;
        "-l" | "--log") arguments="${arguments} PROTON_LOG=1";;
        "--wd" | "--disableWineDebug") arguments="${arguments} winedebug=-all";;
        *) quit=true;;
    esac
    if [ "$quit" == "false" ]; then shift; fi
done

if [[ "$@" != "" ]]; then
    exec "$@"
fi